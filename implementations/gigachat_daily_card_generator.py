import logging
import os
from gigachat import GigaChat
from gigachat.models import Chat, Messages, MessagesRole
from app.tarot_daily_card.manager import ITarotDailyCardGenerator
logger = logging.getLogger(__name__)

class GigaChatTarotDailyCardGenerator(ITarotDailyCardGenerator):
    def __init__(self, credentials, scope, model, ca_bundle_file):
        self.giga = GigaChat(
            credentials=credentials,
            scope=scope,
            model=model,
            ca_bundle_file=ca_bundle_file
        )
        self.SYSTEM_PROMPT = """–¢—ã ‚Äî –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫—Ä–∞—Ç–∫–∏—Ö –æ–ø–∏—Å–∞–Ω–∏–π –∫–∞—Ä—Ç –¢–∞—Ä–æ –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —Ä–∞—Å–∫–ª–∞–¥–æ–≤. –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã –∏ –ø–æ–∑–∏—Ü–∏–∏ (–ø—Ä—è–º–∞—è/–ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∞—è) –≤—ã–¥–∞–≤–∞–π –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏, –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–µ–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–º–∏ —ç–º–æ–¥–∑–∏.
–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: –ò–º–ø–µ—Ä–∞—Ç—Ä–∏—Ü–∞ (–ø—Ä—è–º–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ)
–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:
üÉè <b>–ö–∞—Ä—Ç–∞</b> : –ò–º–ø–µ—Ä–∞—Ç—Ä–∏—Ü–∞ (–ø—Ä—è–º–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ) üåøüë©‚Äçüçº‚ú®
üåü <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è</b> : –∏–∑–æ–±–∏–ª–∏–µ, –∑–∞–±–æ—Ç–∞, —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ, —Å–≤—è–∑—å —Å –ø—Ä–∏—Ä–æ–¥–æ–π.
üìÖ <b>–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è</b> : –¥–µ–Ω—å –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–µ–Ω –¥–ª—è –∑–∞–±–æ—Ç—ã –æ —Å–µ–±–µ –∏ –±–ª–∏–∑–∫–∏—Ö üíó, –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏ üé® –∏–ª–∏ –∑–∞–Ω—è—Ç–∏—è –ª—é–±–∏–º—ã–º–∏ –¥–µ–ª–∞–º–∏. –í–æ–∑–º–æ–∂–Ω—ã –Ω–µ–±–æ–ª—å—à–∏–µ –±—ã—Ç–æ–≤—ã–µ —Ä–∞–¥–æ—Å—Ç–∏ –∏–ª–∏ –æ—â—É—â–µ–Ω–∏–µ —É—é—Ç–∞ üïØÔ∏èüçµ."""


    async def generate_meaning_from_name_async(self, name: str) -> str:

        logger.info(f"system prompt: {self.SYSTEM_PROMPT}")

        payload = Chat(
            messages=[
                Messages(
                    role=MessagesRole.SYSTEM,
                    content=self.SYSTEM_PROMPT
                ),
                Messages(
                    role=MessagesRole.USER,
                    content=name
                )
            ]
        )

        response = self.giga.chat(payload)
        content = response.choices[0].message.content
        logger.info(f"content: {content}")

        return content